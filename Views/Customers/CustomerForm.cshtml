@model CinemaSharpAuth.ViewModels.CustomerFormViewModel

@{
	ViewBag.Title = Model.Customer.Id == 0 ? "New Customer" : "Edit Customer";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@if(Model.Customer.Id == 0)
{
	<h2>New Customer</h2>
}
else
{
	<h2>Edit Customer</h2>
}

@using(Html.BeginForm("Save", "Customers"))
{
	@Html.ValidationSummary(true, "Please fix the following errors.")
	<div class="form-group">
		@Html.LabelFor(m => m.Customer.Name)
		@Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.Customer.Name)
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.Customer.MembershipTypeId)
		@Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
	</div>
	<div class="form-group">
		@* This helps out if the name changes in the model to not manually change in html *@
		@Html.LabelFor(m => m.Customer.Birthdate)
		@* If the property in the model changes it's name you must change it from the for in the label also! *@
		@*<label for="Birthdate">Date of birth</label>*@
		@Html.TextBoxFor(m => m.Customer.Birthdate, "{0:d MMM yyyy}", new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.Customer.Birthdate)
	</div>
	<div class="form-group form-check">
		@Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter, new { @class = "form-check-input" }) Subscribe to Newsletter?
	</div>
	@Html.HiddenFor(m => m.Customer.Id)
	@Html.AntiForgeryToken()
	<button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
	@Scripts.Render("~/bundles/jqueryval")
}